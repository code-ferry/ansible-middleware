# 新建软件安装目录
- name: 创建安装的目录
  file: path={{ item }} state=directory owner={{ install_user }} group={{ install_group }}
  with_items:
    - "{{ install_home }}"
    - "{{ install_home }}/rpm"

# 关闭selinux
- block:
  - name: 临时关闭selinux
    shell: "setenforce 0"
    failed_when: false
  - name: 永久关闭selinux
    lineinfile:
      dest: /etc/selinux/config
      regexp: "^SELINUX="
      line: "SELINUX=disabled"
  when:
    - ansible_distribution == "CentOS" or ansible_distribution == "RedHat"
    - handle_selinux == "yes"

# 关闭服务防火墙
- block:
  - name: 关闭防火墙(CentOS6 & RHEL6)
    service: name=iptables state=stopped enabled=no
    ignore_errors: true
    when:
    - ansible_distribution == "CentOS" or ansible_distribution == "RedHat"
    - ansible_distribution_major_version == "6"
    - handle_firewall == "yes"
  - name: 关闭防火墙(CentOS7 & RHEL7)
    service: name=firewalld state=stopped enabled=no
    ignore_errors: true
    when:
    - ansible_distribution == "CentOS" or ansible_distribution == "RedHat"
    - ansible_distribution_major_version == "7"
    - handle_firewall == "yes"
  - name: 关闭防火墙(suse)
    service: name=SuSEfirewall2 state=stopped enabled=no
    ignore_errors: true
    when:
    - ansible_distribution == "SLES"
    - ansible_distribution_major_version == "12"
    - handle_firewall == "yes"

# 修改操作系统最大进程数和最大文件打开数限制, /etc/security/limits.conf
- block:
  - name: 临时修改limits.conf进程数, 文件数
    shell: "{{ item }}"
    with_items:
    - ulimit -n 102400
    - ulimit -u 102400
  - name: 永久修改limits.conf进程数, 文件数（centos and redhat）
    pam_limits:
      dest: "{{ item.dest }}"
      domain: '{{ install_user }}'
      limit_type: "{{ item.limit_type }}"
      limit_item: "{{ item.limit_item }}"
      value: "{{ item.value }}"
    with_items:
    - { dest: '/etc/security/limits.conf', limit_type: 'soft', limit_item: 'nofile', value: '640000' }
    - { dest: '/etc/security/limits.conf', limit_type: 'hard', limit_item: 'nofile', value: '640000'}
    - { dest: '/etc/security/limits.conf', limit_type: 'soft', limit_item: 'nproc', value: '640000' }
    - { dest: '/etc/security/limits.conf', limit_type: 'hard', limit_item: 'nproc', value: '640000' }
    - { dest: '/etc/security/limits.d/90-nproc.conf', limit_type: 'soft', limit_item: 'nproc', value: '640000' }
    - { dest: '/etc/security/limits.d/90-nproc.conf', limit_type: 'hard', limit_item: 'nproc', value: '640000' }
    tags:
    - set limits
    when:
    - ansible_distribution == "CentOS" or ansible_distribution == "RedHat"
    - handle_ulimit == "yes"

  - name: 永久修改limits.conf进程数, 文件数suse
    pam_limits:
      dest: "{{ item.dest }}"
      domain: '{{ install_user }}'
      limit_type: "{{ item.limit_type }}"
      limit_item: "{{ item.limit_item }}"
      value: "{{ item.value }}"
    with_items:
    - { dest: '/etc/security/limits.conf', limit_type: 'soft', limit_item: 'nofile', value: '102400' }
    - { dest: '/etc/security/limits.conf', limit_type: 'hard', limit_item: 'nofile', value: '102400'}
    - { dest: '/etc/security/limits.conf', limit_type: 'soft', limit_item: 'nproc', value: '102400' }
    - { dest: '/etc/security/limits.conf', limit_type: 'hard', limit_item: 'nproc', value: '102400' }
    tags:
    - set limits
    when:
    - ansible_distribution == "SLES"
    - handle_ulimit == "yes"

# 修改/etc/sysctl.conf的内核参数,
- block:
  - name: 修改sysctl.conf内核参数
    sysctl:
      name: "{{ item.name }}"
      value: "{{ item.value }}"
      state: present
      reload: yes
    with_items:
    - { name: 'vm.swappiness', value: 0 }
    - { name: 'vm.max_map_count', value: 26214400 }
    - { name: 'net.core.somaxconn', value: 20000 }
    - { name: 'net.ipv4.ip_local_port_range', value: "1024 65000" }
    - { name: 'net.ipv4.tcp_keepalive_probes', value: 5 }
    - { name: 'net.ipv4.tcp_keepalive_intvl', value: 15 }
    - { name: 'net.ipv4.tcp_keepalive_time', value: 1200 }
    - { name: 'net.ipv4.tcp_tw_reuse', value: 1 }
    - { name: 'net.ipv4.tcp_tw_recycle', value: 0 }
    - { name: 'net.ipv4.tcp_max_tw_buckets', value: 10000 }
    - { name: 'net.ipv4.tcp_fin_timeout', value: 30 }
    - { name: 'net.ipv4.tcp_syn_retries', value: 3 }
    - { name: 'net.ipv4.tcp_max_syn_backlog', value: 8192 }
    - { name: 'net.core.rmem_default', value: 8388608 }
    - { name: 'net.core.rmem_max', value: 16777216 }
    - { name: 'net.core.wmem_default', value: 8388608 }
    - { name: 'net.core.wmem_max', value: 16777216 }
    - { name: 'net.ipv4.tcp_rmem', value: "4096 87380 16777216" }
    - { name: 'net.ipv4.tcp_wmem', value: "4096 87380 16777216" }
  when:
  - ansible_distribution == "CentOS" or ansible_distribution == "RedHat" or ansible_distribution == "SLES"
  - handle_linux_core == "yes"

# 设置时钟同步服务
- block:
  - name: yum安装ntp(CentOS7 & RHEL7)
    yum:
      state: installed
      name: ntp
  when:
  - ansible_distribution == "CentOS" or ansible_distribution == "RedHat"
  - ansible_distribution_major_version == "7" or ansible_distribution_major_version == "6"
  - handle_ntp == "yes"

- block:
  - name: yum安装ntp(suse)
    zypper:
      state: installed
      name: ntp
  when:
  - ansible_distribution == "SLES"
  - ansible_distribution_major_version == "12"
  - handle_ntp == "yes"

- block:
  - name: 更新本地时间与服务器硬件时间
    shell: ". ~/.bash_profile; ntpdate {{ default_ntp_server }} && hwclock --systohc"
    args:
      executable: /bin/bash
    ignore_errors: true
  - name: 更新配置文件ntp.conf
    template:
      src: ntp.conf.j2
      dest: /etc/ntp.conf
      backup: yes
    notify: restart ntpd
  - name: 启动ntpd服务
    service:
      name: ntpd
      state: started
      enabled: true
    tags: start ntp
  when:
  - ansible_distribution == "CentOS" or ansible_distribution == "RedHat" or ansible_distribution == "SLES"
  - handle_ntp == "yes"
