# 安装前的检查
- import_tasks: install-check.yaml

# Check that ssl path
- name: Check that ssl path
  stat:
    path: "{{ ssl_path }}"
  register: path_result

- name: Check that ssl path
  fail:
    msg: "ssl_path should make first. You can execute 'ansible-playbook 01.ssl.yaml -i xxx -t prepare'"
  when: not path_result.stat.exists

- name: Check that the keystore file exists
  stat:
    path: "{{ ssl_path }}/{{ ssl_server_ks }}"
  register: stat_result

# Create server keystore
- name: Create server keystore file
  shell: '$JAVA_HOME/bin/keytool -genkeypair \
          -keystore {{ ssl_path }}/{{ ssl_server_ks }} \
          -alias localhost \
          -validity {{ ssl_server_ks_day }} \
          -keyalg RSA \
          -storepass {{ ssl_server_ks_password }} \
          -keypass {{ ssl_server_key_password }} \
          -dname {{ ssl_server_ks_dname }}'
  environment:
    JAVA_HOME: "{{ java_home }}"
  async: 20
  poll: 2
  args:
    executable: /bin/bash
  when: not stat_result.stat.exists

# Export certificate signing request from server keystore
- name: Export certificate signing request from server keystore
  shell: '$JAVA_HOME/bin/keytool -certreq \
          -keystore "{{ ssl_path }}/{{ ssl_server_ks }}" \
          -alias localhost \
          -file "{{ ssl_path }}/{{ ssl_server_csr }}" \
          -storepass {{ ssl_server_ks_password }} \
          -keypass {{ ssl_server_key_password }} \
          -noprompt'
  environment:
    JAVA_HOME: "{{ java_home }}"
  async: 20
  poll: 2
  args:
    executable: /bin/bash
  when: not stat_result.stat.exists

# Signing server certificate(生成ssl_server_cert)
- name: Signing server certificate
  shell: '. .bash_profile; \
          openssl x509 -req \
          -CA {{ ssl_path }}/{{ ssl_ca_cert }} \
          -CAkey {{ ssl_path }}/{{ ssl_ca_key }} \
          -in {{ ssl_path }}/{{ ssl_server_csr }} \
          -out {{ ssl_path }}/{{ ssl_server_cert }} \
          -days {{ ssl_server_cert_day }} \
          -CAcreateserial \
          -extensions v3_ca \
          -passin pass:{{ ssl_ca_key_password }}'
  async: 20
  poll: 2
  args:
    executable: /bin/bash
  when: not stat_result.stat.exists

# Import ca certificate file into server keystore file
- name: Import ca certificate file into server keystore file
  shell: '$JAVA_HOME/bin/keytool -import \
          -keystore {{ ssl_path }}/{{ ssl_server_ks }} \
          -alias CARoot \
          -file {{ ssl_path }}/{{ ssl_ca_cert }} \
          -storepass {{ ssl_server_ks_password }} \
          -noprompt'
  environment:
    JAVA_HOME: "{{ java_home }}"
  async: 20
  poll: 2
  args:
    executable: /bin/bash
  when: not stat_result.stat.exists

# Import signing server certificate file into server keystore file
- name: Import signing server certificate file into server keystore file
  shell: '$JAVA_HOME/bin/keytool -import \
          -keystore {{ ssl_path }}/{{ ssl_server_ks }} \
          -alias localhost \
          -file {{ ssl_path }}/{{ ssl_server_cert }} \
          -storepass {{ ssl_server_ks_password }} \
          -noprompt'
  environment:
    JAVA_HOME: "{{ java_home }}"
  async: 20
  poll: 2
  args:
    executable: /bin/bash
  when: not stat_result.stat.exists
