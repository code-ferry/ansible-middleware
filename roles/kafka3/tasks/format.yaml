- name: Get random id
  shell: ". ~/.bash_profile; {{ kafka_home }}/bin/kafka-storage.sh random-uuid"
  environment:
    KAFKA_HOME: "{{ kafka_home }}"
  async: 30         # 最大超时时间以及轮询其状态的频率, 如果你没有为poll指定值, 那么默认的轮询频率是15秒钟
  poll: 2           # 设置为0时, 任务会立即返回
  args:
    executable: /bin/bash
    chdir: "{{ kafka_home }}/bin"
  register: v_random_id
  run_once: true

- name: Print random id
  debug:
    msg: "Random id: '{{ v_random_id.stdout }}', kafka home: {{ kafka_home }}"
  run_once: true

- name: Format kafka
  shell: ". ~/.bash_profile; {{ kafka_home }}/bin/kafka-storage.sh format -t {{ v_random_id.stdout }} -c {{ kafka_home }}/config/kraft/server.properties"
  environment:
    KAFKA_HOME: "{{ kafka_home }}"
  async: 120         # 最大超时时间以及轮询其状态的频率, 如果你没有为poll指定值, 那么默认的轮询频率是15秒钟
  poll: 2            # 设置为0时, 任务会立即返回
  args:
    executable: /bin/bash
    chdir: "{{ kafka_home }}/bin"
  when: v_random_id.stdout != ""

#- name: "Check kafka port {{ kafka_port }}"
#  wait_for:
#    host: "{{ inventory_hostname }}"
#    port: "{{ kafka_port }}"
#    delay: 5
#    state: started
#    timeout: 60
#
#- name: Print kafka status
#  shell: ". ~/.bash_profile; {{ kafka_home }}/bin/kafka-topics.sh --list --zookeeper {{ zookeeper_hosts }}"
#  environment:
#    KAFKA_HOME: "{{ kafka_home }}"
#  register: result
#
#- name: List kafka topic
#  debug:
#    msg: "{{ result.stdout_lines }}"
